frames
frames[1]
read.csv
read.csv2
read.csv(names[1])
frames2$1
frames2[[1]]
frames2[[1]]
frames2
frames2 <- le.arquivos('.')
source('C:/Users/Italo Silva/Projeto/faptp/novo_experimento/analise.r')
frames2
ldply
ldply(names, read.csv)
names
arquivos
source('C:/Users/Italo Silva/Projeto/faptp/novo_experimento/analise.r')
arquivos = list.files()
arquvos
arquivos
ldply(arquivos, read.csv)
a <- ldply(arquivos, read.csv)
a
a
b
b <- ddply(a, ~ID.Algoritmo, summarise, mean=mean(FO))
b
rdp
b <- ddply(a, ~ID.Algoritmo, summarise, Media.FO=mean(FO), Mediana.FO=median(FO))
b
A
a
b <- ddply(a, ~ID.Algoritmo, summarise, Media.FO=mean(FO), Mediana.FO=median(FO), Media.Tempo=mean(Tempo.total), Mediana.Tempo=median(Tempo.total))
b
source('C:/Users/Italo Silva/Projeto/faptp/novo_experimento/analise.r')
source('C:/Users/Italo Silva/Projeto/faptp/novo_experimento/analise.r')
ldply(arquivos, read.csv)
source('C:/Users/Italo Silva/Projeto/faptp/novo_experimento/analise.r')
result
source('C:/Users/Italo Silva/Projeto/faptp/novo_experimento/analise.r')
Mediana.Tempo=median(Tempo.total))
source('C:/Users/Italo Silva/Projeto/faptp/novo_experimento/analise.r')
source('C:/Users/Italo Silva/Projeto/faptp/novo_experimento/analise.r')
le.arquivos <- function(caminho) {
arquivos <- list.files(caminho)
ldply(arquivos, read.csv)
}
frames <- le.arquivos('.')
result <- ddply(frames, ~ID.Algoritmo, summarise, Media.FO=mean(FO),
Mediana.FO=median(FO), Media.Tempo=mean(Tempo.total),
Mediana.Tempo=median(Tempo.total))
le.arquivos <- function(caminho) {
arquivos <- list.files(caminho)
ldply(arquivos, read.csv)
}
frames <- le.arquivos('.')
result <- ddply(frames, ~ID.Algoritmo, summarise, Media.FO=mean(FO),
Mediana.FO=median(FO), Media.Tempo=mean(Tempo.total),
Mediana.Tempo=median(Tempo.total))
result
source('C:/Users/Italo Silva/Projeto/faptp/novo_experimento/analise.r')
source('C:/Users/Italo Silva/Projeto/faptp/novo_experimento/analise.r')
abs(-3)
source('C:/Users/Italo Silva/Projeto/faptp/novo_experimento/analise.r')
RPD.Tempo=function(x){rpd(x, min.Time)(Tempo.total)})
RPD.Tempo=function(x){rpd(x, min.Time)}(Tempo.total))
RPD.FO=function(x){rpd(x, max.FO)}(FO))
RPD.FO=function(x){rpd(x, max.FO)}(FO)
le.arquivos <- function(caminho) {
arquivos <- list.files(caminho)
ldply(arquivos, read.csv)
}
rpd <- function(f.method, f.best) {
abs((f.method - f.best)/f.best) * 100
}
frames <- le.arquivos('.')
max.FO <- max(frames$FO)
min.Time <- min(frames$Tempo.total)
result <- ddply(frames, ~ID.Algoritmo, summarise,
Media.FO=mean(FO), Mediana.FO=median(FO),
Media.Tempo=mean(Tempo.total), Mediana.Tempo=median(Tempo.total),
RPD.FO=function(x){rpd(x, max.FO)}(FO),
RPD.Tempo=function(x){rpd(x, min.Time)}(Tempo.total))
le.arquivos <- function(caminho) {
arquivos <- list.files(caminho)
ldply(arquivos, read.csv)
}
rpd <- function(f.method, f.best) {
abs((f.method - f.best)/f.best) * 100
}
frames <- le.arquivos('.')
max.FO <- max(frames$FO)
min.Time <- min(frames$Tempo.total)
result <- ddply(frames, ~ID.Algoritmo, summarise,
Media.FO=mean(FO), Mediana.FO=median(FO),
Media.Tempo=mean(Tempo.total), Mediana.Tempo=median(Tempo.total),
RPD.FO=function(x){rpd(x, max.FO)}(FO))
le.arquivos <- function(caminho) {
arquivos <- list.files(caminho)
ldply(arquivos, read.csv)
}
rpd <- function(f.method, f.best) {
abs((f.method - f.best)/f.best) * 100
}
frames <- le.arquivos('.')
max.FO <- max(frames$FO)
min.Time <- min(frames$Tempo.total)
rpdFo <- function(x) {
rpd(x, max.FO)
}
rpdTime <- function(x) {
rpd(x, min.Time)
}
result <- ddply(frames, ~ID.Algoritmo, summarise,
Media.FO=mean(FO), Mediana.FO=median(FO),
Media.Tempo=mean(Tempo.total), Mediana.Tempo=median(Tempo.total),
RPD.FO=rpdFo(FO))
le.arquivos <- function(caminho) {
arquivos <- list.files(caminho)
ldply(arquivos, read.csv)
}
rpd <- function(f.method, f.best) {
abs((f.method - f.best)/f.best) * 100
}
frames <- le.arquivos('.')
max.FO <- max(frames$FO)
min.Time <- min(frames$Tempo.total)
rpdFo <- function(x) {
rpd(x, max.FO)
}
rpdTime <- function(x) {
rpd(x, min.Time)
}
result <- ddply(frames, ~ID.Algoritmo, summarise,
Media.FO=mean(FO), Mediana.FO=median(FO),
Media.Tempo=mean(Tempo.total), Mediana.Tempo=median(Tempo.total))
rpdFo(frames$FO)
frames$FO
rpdTime(frames$Tempo.total)
frames
rpdTime(frames$Tempo.total)
lapply(rpdTime, frames$Tempo.total)
lapply(frames$Tempo.total, rpdTiem)
lapply(frames$Tempo.total, rpdTime)
Reduce
lapply(frames$Tempo.total, rpdTime)
mean(lapply(frames$Tempo.total, rpdTime))
c(frames$Tempo.total)
lapply(c(frames$Tempo.total), rpdTime)
mean(lapply(c(frames$Tempo.total), rpdTime))
mean(lapply(c(frames$Tempo.total), rpdTime)))
mean(ldpply(c(frames$Tempo.total), rpdTime))
mean(ldply(c(frames$Tempo.total), rpdTime))
mean(ldply(frames$Tempo.total, rpdTime))
mean(sapply(frames$Tempo.total, rpdTime))
mean(sapply(frames$FO, rpdFo))
mean(sapply(frames$FO, function(x) rpd(x, max.FO)))
source('C:/Users/Italo Silva/Projeto/faptp/novo_experimento/analise.r')
le.arquivos <- function(caminho) {
arquivos <- list.files(caminho)
ldply(arquivos, read.csv)
}
rpd <- function(f.method, f.best) {
abs((f.method - f.best)/f.best) * 100
}
frames <- le.arquivos('.')
max.FO <- max(frames$FO)
min.Time <- min(frames$Tempo.total)
rpdFo <- function(x) {
sapply(x, function(y) rpd(y, max.FO))
}
rpdTime <- function(x) {
rpd(x, min.Time)
}
result <- ddply(frames, ~ID.Algoritmo, summarise,
Media.FO=mean(FO), Mediana.FO=median(FO),
Media.Tempo=mean(Tempo.total), Mediana.Tempo=median(Tempo.total),
RPD.FO=rpdFo(FO))
source('C:/Users/Italo Silva/Projeto/faptp/novo_experimento/analise.r')
le.arquivos <- function(caminho) {
arquivos <- list.files(caminho)
ldply(arquivos, read.csv)
}
rpd <- function(f.method, f.best) {
abs((f.method - f.best)/f.best) * 100
}
frames <- le.arquivos('.')
max.FO <- max(frames$FO)
min.Time <- min(frames$Tempo.total)
rpdFo <- function(x) {
mean(sapply(x, function(y) rpd(y, max.FO)))
}
rpdTime <- function(x) {
rpd(x, min.Time)
}
result <- ddply(frames, ~ID.Algoritmo, summarise,
Media.FO=mean(FO), Mediana.FO=median(FO),
Media.Tempo=mean(Tempo.total), Mediana.Tempo=median(Tempo.total),
RPD.FO=rpdFo(FO))
result
source('C:/Users/Italo Silva/Projeto/faptp/novo_experimento/analise.r')
source('C:/Users/Italo Silva/Projeto/faptp/novo_experimento/analise.r')
RPD.FO=(function(x) { rpd.media(x, max.FO) })(FO))
le.arquivos <- function(caminho) {
arquivos <- list.files(caminho)
ldply(arquivos, read.csv)
}
rpd <- function(f.method, f.best) {
abs((f.method - f.best)/f.best) * 100
}
frames <- le.arquivos('.')
max.FO <- max(frames$FO)
min.Time <- min(frames$Tempo.total)
rpd.media <- function(col, f.best) {
mean(sapply(col, function(cur) rpd(cur, f.best)))
}
rpdTime <- function(x) {
rpd(x, min.Time)
}
result <- ddply(frames, ~ID.Algoritmo, summarise,
Media.FO=mean(FO), Mediana.FO=median(FO),
Media.Tempo=mean(Tempo.total), Mediana.Tempo=median(Tempo.total),
RPD.FO=(function(x) { rpd.media(x, max.FO) })(FO))
result
source('C:/Users/Italo Silva/Projeto/faptp/novo_experimento/analise.r')
source('C:/Users/Italo Silva/Projeto/faptp/novo_experimento/analise.r')
le.arquivos <- function(caminho) {
arquivos <- list.files(caminho)
ldply(arquivos, read.csv)
}
rpd <- function(f.method, f.best) {
abs((f.method - f.best)/f.best) * 100
}
frames <- le.arquivos('.')
max.FO <- max(frames$FO)
min.Time <- min(frames$Tempo.total)
rpd.reduce <- function(f, col, f.best) {
f(sapply(col, function(cur) rpd(cur, f.best)))
}
rpdTime <- function(x) {
rpd(x, min.Time)
}
result <- ddply(frames, ~ID.Algoritmo, summarise,
Media.FO=mean(FO), Mediana.FO=median(FO),
Media.Tempo=mean(Tempo.total), Mediana.Tempo=median(Tempo.total),
RPD.FO=(function(x) { rpd.reduce(mean, x, max.FO) })(FO)
)
le.arquivos <- function(caminho) {
arquivos <- list.files(caminho)
ldply(arquivos, read.csv)
}
rpd <- function(f.method, f.best) {
abs((f.method - f.best)/f.best) * 100
}
frames <- le.arquivos('.')
max.FO <- max(frames$FO)
min.Time <- min(frames$Tempo.total)
rpd.reduce <- function(f, col, f.best) {
f(sapply(col, function(cur) rpd(cur, f.best)))
}
rpdTime <- function(x) {
rpd(x, min.Time)
}
result <- ddply(frames, ~ID.Algoritmo, summarise,
Media.FO=mean(FO), Mediana.FO=median(FO),
Media.Tempo=mean(Tempo.total), Mediana.Tempo=median(Tempo.total),
RPD.FO=(function(x) { rpd.reduce(mean, x, max.FO) })(FO),
RPD.Tempo=(function(x) { rpd.reduce(mean, x, min.Time) })(Tempo.total),
)
source('C:/Users/Italo Silva/Projeto/faptp/novo_experimento/analise.r')
source('C:/Users/Italo Silva/Projeto/faptp/novo_experimento/analise.r')
le.arquivos <- function(caminho) {
arquivos <- list.files(caminho)
ldply(arquivos, read.csv)
}
rpd <- function(f.method, f.best) {
abs((f.method - f.best)/f.best) * 100
}
frames <- le.arquivos('.')
max.FO <- max(frames$FO)
min.Time <- min(frames$Tempo.total)
rpd.reduce <- function(f, col, f.best) {
f(sapply(col, function(cur) rpd(cur, f.best)))
}
rpdTime <- function(x) {
rpd(x, min.Time)
}
result <- ddply(frames, ~ID.Algoritmo, summarise,
Media.FO=mean(FO), Mediana.FO=median(FO),
Media.Tempo=mean(Tempo.total), Mediana.Tempo=median(Tempo.total),
RPD.FO=(function(x) { rpd.reduce(mean, x, max.FO) })(FO),
RPD.Tempo=(function(x) { rpd.reduce(mean, x, min.Time) })(Tempo.total),
)
source('C:/Users/Italo Silva/Projeto/faptp/novo_experimento/analise.r')
le.arquivos <- function(caminho) {
arquivos <- list.files(caminho)
ldply(arquivos, read.csv)
}
rpd <- function(f.method, f.best) {
abs((f.method - f.best)/f.best) * 100
}
frames <- le.arquivos('.')
max.FO <- max(frames$FO)
min.Time <- min(frames$Tempo.total)
rpd.reduce <- function(f, col, f.best) {
f(sapply(col, function(cur) rpd(cur, f.best)))
}
rpdTime <- function(x) {
rpd(x, min.Time)
}
result <- ddply(frames, ~ID.Algoritmo, summarise,
Media.FO=mean(FO), Mediana.FO=median(FO),
Media.Tempo=mean(Tempo.total), Mediana.Tempo=median(Tempo.total),
RPD.FO=(function(x) { rpd.reduce(mean, x, max.FO) })(FO),
RPD.Tempo=(function(x) { rpd.reduce(mean, x, min.Time) })(Tempo.total)
)
source('C:/Users/Italo Silva/Projeto/faptp/novo_experimento/analise.r')
le.arquivos <- function(caminho) {
arquivos <- list.files(caminho)
ldply(arquivos, read.csv)
}
rpd <- function(f.method, f.best) {
abs((f.method - f.best)/f.best) * 100
}
frames <- le.arquivos('.')
max.FO <- max(frames$FO)
min.Time <- min(frames$Tempo.total)
rpd.reduce <- function(f, col, f.best) {
f(sapply(col, function(cur) rpd(cur, f.best)))
}
rpdTime <- function(x) {
rpd(x, min.Time)
}
result <- ddply(frames, ~ID.Algoritmo, summarise,
Media.FO=mean(FO), Mediana.FO=median(FO),
Media.Tempo=mean(Tempo.total), Mediana.Tempo=median(Tempo.total),
RPD.FO=(function(x) { rpd.reduce(mean, x, max.FO) })(FO),
RPD.Tempo=(function(x) { rpd.reduce(mean, x, min.Time) })(Tempo.total)
)
result
source('C:/Users/Italo Silva/Projeto/faptp/novo_experimento/analise.r')
le.arquivos <- function(caminho) {
arquivos <- list.files(caminho)
ldply(arquivos, read.csv)
}
rpd <- function(f.method, f.best) {
abs((f.method - f.best)/f.best) * 100
}
frames <- le.arquivos('.')
max.FO <- max(frames$FO)
min.Time <- min(frames$Tempo.total)
rpd.reduce <- function(f, col, f.best) {
f(sapply(col, function(cur) rpd(cur, f.best)))
}
rpdTime <- function(x) {
rpd(x, min.Time)
}
result <- ddply(frames, ~ID.Algoritmo, summarise,
Media.FO=mean(FO), Mediana.FO=median(FO), Max.FO=max(FO),
Media.Tempo=mean(Tempo.total), Mediana.Tempo=median(Tempo.total),
RPD.FO=(function(x) { rpd.reduce(mean, x, max.FO) })(FO),
RPD.Tempo=(function(x) { rpd.reduce(mean, x, min.Time) })(Tempo.total)
)
result
source('C:/Users/Italo Silva/Projeto/faptp/novo_experimento/analise.r')
library(plyr)
le.arquivos <- function(caminho) {
arquivos <- list.files(caminho)
ldply(arquivos, read.csv)
}
rpd <- function(f.method, f.best) {
abs((f.method - f.best)/f.best) * 100
}
frames <- le.arquivos('.')
max.FO <- max(frames$FO)
min.Time <- min(frames$Tempo.total)
rpd.reduce <- function(f, col, f.best) {
f(sapply(col, function(cur) rpd(cur, f.best)))
}
rpdTime <- function(x) {
rpd(x, min.Time)
}
result <- ddply(frames, ~ID.Algoritmo, summarise,
Media.FO=mean(FO), Mediana.FO=median(FO), Max.FO=max(FO),
Media.Tempo=mean(Tempo.total), Mediana.Tempo=median(Tempo.total),
RPD.FO=(function(x) { rpd.reduce(mean, x, max.FO) })(FO),
RPD.Tempo=(function(x) { rpd.reduce(mean, x, min.Time) })(Tempo.total)
)
result
source('C:/Users/Italo Silva/Projeto/faptp/novo_experimento/analise.r')
library(plyr)
le.arquivos <- function(caminho) {
arquivos <- list.files(caminho)
ldply(arquivos, read.csv)
}
rpd <- function(f.method, f.best) {
abs((f.method - f.best)/f.best) * 100
}
frames <- le.arquivos('.')
max.FO <- max(frames$FO)
min.Time <- min(frames$Tempo.total)
rpd.reduce <- function(f, col, f.best) {
f(sapply(col, function(cur) rpd(cur, f.best)))
}
result <- ddply(frames, ~ID.Algoritmo, summarise,
Media.FO=mean(FO), Mediana.FO=median(FO), Max.FO=max(FO),
Media.Tempo=mean(Tempo.total), Mediana.Tempo=median(Tempo.total),
RPD.FO=(function(x) { rpd.reduce(mean, x, max.FO) })(FO),
RPD.Tempo=(function(x) { rpd.reduce(mean, x, min.Time) })(Tempo.total)
)
result
library(plyr)
le.arquivos <- function(caminho) {
arquivos <- list.files(caminho)
ldply(arquivos, read.csv)
}
rpd <- function(f.method, f.best) {
abs((f.method - f.best)/f.best) * 100
}
frames <- le.arquivos('.')
max.FO <- max(frames$FO)
min.Time <- min(frames$Tempo.total)
rpd.reduce <- function(f, col, f.best) {
f(sapply(col, function(cur) rpd(cur, f.best)))
}
result <- ddply(frames, ~ID.Algoritmo, summarise,
Media.FO=mean(FO), Mediana.FO=median(FO), Max.FO=max(FO),
Media.Tempo=mean(Tempo.total), Mediana.Tempo=median(Tempo.total),
RPD.FO=(function(x) { rpd.reduce(mean, x, max.FO) })(FO),
RPD.Tempo=(function(x) { rpd.reduce(mean, x, min.Time) })(Tempo.total)
)
result
library(plyr)
le.arquivos <- function(caminho) {
arquivos <- list.files(caminho)
ldply(arquivos, read.csv)
}
rpd <- function(f.method, f.best) {
abs((f.method - f.best)/f.best) * 100
}
frames <- le.arquivos('.')
max.FO <- max(frames$FO)
min.Time <- min(frames$Tempo.total)
rpd.reduce <- function(f, col, f.best) {
f(sapply(col, function(cur) rpd(cur, f.best)))
}
result <- ddply(frames, ~ID.Algoritmo, summarise,
Media.FO=mean(FO), Mediana.FO=median(FO), Max.FO=max(FO),
Media.Tempo=mean(Tempo.total), Mediana.Tempo=median(Tempo.total),
RPD.FO=(function(x) { rpd.reduce(mean, x, max(frames$FO)) })(FO),
RPD.Tempo=(function(x) { rpd.reduce(mean, x, min(frames$Tempo.total)) })(Tempo.total)
)
result
library(plyr)
le.arquivos <- function(caminho) {
arquivos <- list.files(caminho)
ldply(arquivos, read.csv)
}
rpd <- function(f.method, f.best) {
abs((f.method - f.best)/f.best) * 100
}
rpd.reduce <- function(f, col, f.best) {
f(sapply(col, function(cur) rpd(cur, f.best)))
}
frames <- le.arquivos('.')
result <- ddply(frames, ~ID.Algoritmo, summarise,
Media.FO=mean(FO), Mediana.FO=median(FO), Max.FO=max(FO),
Media.Tempo=mean(Tempo.total), Mediana.Tempo=median(Tempo.total), Min.Tempo=min(Tempo.total)
RPD.FO=(function(x) { rpd.reduce(mean, x, max(frames$FO)) })(FO),
RPD.Tempo=(function(x) { rpd.reduce(mean, x, min(frames$Tempo.total)) })(Tempo.total)
)
result
library(plyr)
le.arquivos <- function(caminho) {
arquivos <- list.files(caminho)
ldply(arquivos, read.csv)
}
rpd <- function(f.method, f.best) {
abs((f.method - f.best)/f.best) * 100
}
rpd.reduce <- function(f, col, f.best) {
f(sapply(col, function(cur) rpd(cur, f.best)))
}
frames <- le.arquivos('.')
result <- ddply(frames, ~ID.Algoritmo, summarise,
Media.FO=mean(FO), Mediana.FO=median(FO), Max.FO=max(FO),
Media.Tempo=mean(Tempo.total), Mediana.Tempo=median(Tempo.total), Min.Tempo=min(Tempo.total),
RPD.FO=(function(x) { rpd.reduce(mean, x, max(frames$FO)) })(FO),
RPD.Tempo=(function(x) { rpd.reduce(mean, x, min(frames$Tempo.total)) })(Tempo.total)
)
result
rownames(result) <- result$ID.Algoritmo
result
library(plyr)
le.arquivos <- function(caminho) {
arquivos <- list.files(caminho)
ldply(arquivos, read.csv)
}
rpd <- function(f.method, f.best) {
abs((f.method - f.best)/f.best) * 100
}
rpd.reduce <- function(f, col, f.best) {
f(sapply(col, function(cur) rpd(cur, f.best)))
}
frames <- le.arquivos('.')
result <- ddply(frames, ~ID.Algoritmo, summarise,
Media.FO=mean(FO), Mediana.FO=median(FO), Max.FO=max(FO),
Media.Tempo=mean(Tempo.total), Mediana.Tempo=median(Tempo.total), Min.Tempo=min(Tempo.total),
RPD.FO=(function(x) { rpd.reduce(mean, x, max(frames$FO)) })(FO),
RPD.Tempo=(function(x) { rpd.reduce(mean, x, min(frames$Tempo.total)) })(Tempo.total)
)
result
